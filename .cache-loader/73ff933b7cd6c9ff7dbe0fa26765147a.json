{"remainingRequest":"E:\\workspace_gspann\\itrack\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!E:\\workspace_gspann\\itrack\\node_modules\\ts-loader\\index.js??ref--10-3!E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js!E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js!E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts","dependencies":[{"path":"E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts","mtime":1522917700771},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar JhiAlertErrorComponent = /** @class */ (function () {\r\n    /* tslint:disable */\r\n    function JhiAlertErrorComponent(alertService, eventManager) {\r\n        var _this = this;\r\n        this.alertService = alertService;\r\n        this.eventManager = eventManager;\r\n        /* tslint:enable */\r\n        this.alerts = [];\r\n        this.cleanHttpErrorListener = eventManager.subscribe('itrack2App.httpError', function (response) {\r\n            var i;\r\n            var httpErrorResponse = response.content;\r\n            switch (httpErrorResponse.status) {\r\n                // connection refused, server not reachable\r\n                case 0:\r\n                    _this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\r\n                    break;\r\n                case 400:\r\n                    var arr = httpErrorResponse.headers.keys();\r\n                    var errorHeader_1 = null;\r\n                    var entityKey_1 = null;\r\n                    arr.forEach(function (entry) {\r\n                        if (entry.endsWith('app-error')) {\r\n                            errorHeader_1 = httpErrorResponse.headers.get(entry);\r\n                        }\r\n                        else if (entry.endsWith('app-params')) {\r\n                            entityKey_1 = httpErrorResponse.headers.get(entry);\r\n                        }\r\n                    });\r\n                    if (errorHeader_1) {\r\n                        var entityName = entityKey_1;\r\n                        _this.addErrorAlert(errorHeader_1, errorHeader_1, { entityName: entityName });\r\n                    }\r\n                    else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\r\n                        var fieldErrors = httpErrorResponse.error.fieldErrors;\r\n                        for (i = 0; i < fieldErrors.length; i++) {\r\n                            var fieldError = fieldErrors[i];\r\n                            // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n                            var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n                            var fieldName = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\r\n                            _this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName: fieldName });\r\n                        }\r\n                    }\r\n                    else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n                        _this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\r\n                    }\r\n                    else {\r\n                        _this.addErrorAlert(httpErrorResponse.error);\r\n                    }\r\n                    break;\r\n                case 404:\r\n                    _this.addErrorAlert('Not found', 'error.url.not.found');\r\n                    break;\r\n                default:\r\n                    if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n                        _this.addErrorAlert(httpErrorResponse.error.message);\r\n                    }\r\n                    else {\r\n                        _this.addErrorAlert(httpErrorResponse.error);\r\n                    }\r\n            }\r\n        });\r\n    }\r\n    JhiAlertErrorComponent.prototype.ngOnDestroy = function () {\r\n        if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\r\n            this.eventManager.destroy(this.cleanHttpErrorListener);\r\n            this.alerts = [];\r\n        }\r\n    };\r\n    JhiAlertErrorComponent.prototype.addErrorAlert = function (message, key, data) {\r\n        this.alerts.push(this.alertService.addAlert({\r\n            type: 'danger',\r\n            msg: message,\r\n            timeout: 5000,\r\n            toast: this.alertService.isToast(),\r\n            scoped: true\r\n        }, this.alerts));\r\n    };\r\n    JhiAlertErrorComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-alert-error',\r\n            template: \"\\n        <div class=\\\"alerts\\\" role=\\\"alert\\\">\\n            <div *ngFor=\\\"let alert of alerts\\\"  [ngClass]=\\\"{'alert.position': true, 'toast': alert.toast}\\\">\\n                <ngb-alert *ngIf=\\\"alert && alert.type && alert.msg\\\" [type]=\\\"alert.type\\\" (close)=\\\"alert.close(alerts)\\\">\\n                    <pre [innerHTML]=\\\"alert.msg\\\"></pre>\\n                </ngb-alert>\\n            </div>\\n        </div>\"\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" && _b || Object])\r\n    ], JhiAlertErrorComponent);\r\n    return JhiAlertErrorComponent;\r\n    var _a, _b;\r\n}());\r\nexports.JhiAlertErrorComponent = JhiAlertErrorComponent;\r\n",{"version":3,"file":"E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts","sourceRoot":"","sources":["E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js!E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js!E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\shared\\alert\\alert-error.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { JhiEventManager, JhiAlertService } from 'ng-jhipster';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'jhi-alert-error',\n  template: `\n        <div class=\"alerts\" role=\"alert\">\n            <div *ngFor=\"let alert of alerts\"  [ngClass]=\"{\\'alert.position\\': true, \\'toast\\': alert.toast}\">\n                <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"alert.close(alerts)\">\n                    <pre [innerHTML]=\"alert.msg\"></pre>\n                </ngb-alert>\n            </div>\n        </div>`\n})\nexport class JhiAlertErrorComponent implements OnDestroy {\n  alerts: any[];\n  cleanHttpErrorListener: Subscription;\n  /* tslint:disable */\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager) {\n    /* tslint:enable */\n    this.alerts = [];\n\n    this.cleanHttpErrorListener = eventManager.subscribe('itrack2App.httpError', response => {\n      let i;\n      const httpErrorResponse = response.content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400:\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader = null;\n          let entityKey = null;\n          arr.forEach(entry => {\n            if (entry.endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          });\n          if (errorHeader) {\n            const entityName = entityKey;\n            this.addErrorAlert(errorHeader, errorHeader, { entityName });\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (i = 0; i < fieldErrors.length; i++) {\n              const fieldError = fieldErrors[i];\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\n              this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n          break;\n\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\n      this.eventManager.destroy(this.cleanHttpErrorListener);\n      this.alerts = [];\n    }\n  }\n\n  addErrorAlert(message, key?, data?) {\n    this.alerts.push(\n      this.alertService.addAlert(\n        {\n          type: 'danger',\n          msg: message,\n          timeout: 5000,\n          toast: this.alertService.isToast(),\n          scoped: true\n        },\n        this.alerts\n      )\n    );\n  }\n}\n"]}]}