{"remainingRequest":"E:\\workspace_gspann\\itrack\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!E:\\workspace_gspann\\itrack\\node_modules\\ts-loader\\index.js??ref--10-3!E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js!E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js!E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\admin\\health\\health.component.ts","dependencies":[{"path":"E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\admin\\health\\health.component.ts","mtime":1522917700369},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar health_service_1 = require(\"./health.service\");\r\nvar health_modal_component_1 = require(\"./health-modal.component\");\r\nvar JhiHealthCheckComponent = /** @class */ (function () {\r\n    function JhiHealthCheckComponent(modalService, healthService) {\r\n        this.modalService = modalService;\r\n        this.healthService = healthService;\r\n    }\r\n    JhiHealthCheckComponent.prototype.ngOnInit = function () {\r\n        this.refresh();\r\n    };\r\n    JhiHealthCheckComponent.prototype.baseName = function (name) {\r\n        return this.healthService.getBaseName(name);\r\n    };\r\n    JhiHealthCheckComponent.prototype.getBadgeClass = function (statusState) {\r\n        if (statusState === 'UP') {\r\n            return 'badge-success';\r\n        }\r\n        else {\r\n            return 'badge-danger';\r\n        }\r\n    };\r\n    JhiHealthCheckComponent.prototype.refresh = function () {\r\n        var _this = this;\r\n        this.updatingHealth = true;\r\n        this.healthService.checkHealth().subscribe(function (health) {\r\n            _this.healthData = _this.healthService.transformHealthData(health);\r\n            _this.updatingHealth = false;\r\n        }, function (error) {\r\n            if (error.status === 503) {\r\n                _this.healthData = _this.healthService.transformHealthData(error.error);\r\n                _this.updatingHealth = false;\r\n            }\r\n        });\r\n    };\r\n    JhiHealthCheckComponent.prototype.showHealth = function (health) {\r\n        var modalRef = this.modalService.open(health_modal_component_1.JhiHealthModalComponent);\r\n        modalRef.componentInstance.currentHealth = health;\r\n        modalRef.result.then(function (result) {\r\n            // Left blank intentionally, nothing to do here\r\n        }, function (reason) {\r\n            // Left blank intentionally, nothing to do here\r\n        });\r\n    };\r\n    JhiHealthCheckComponent.prototype.subSystemName = function (name) {\r\n        return this.healthService.getSubSystemName(name);\r\n    };\r\n    JhiHealthCheckComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-health',\r\n            templateUrl: './health.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" && _a || Object, typeof (_b = typeof health_service_1.JhiHealthService !== \"undefined\" && health_service_1.JhiHealthService) === \"function\" && _b || Object])\r\n    ], JhiHealthCheckComponent);\r\n    return JhiHealthCheckComponent;\r\n    var _a, _b;\r\n}());\r\nexports.JhiHealthCheckComponent = JhiHealthCheckComponent;\r\n",{"version":3,"file":"E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\admin\\health\\health.component.ts","sourceRoot":"","sources":["E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js!E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js!E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\admin\\health\\health.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,2DAAsD;AAEtD,mDAAoD;AACpD,mEAAmE;AAMnE;IAIE,iCAAoB,YAAsB,EAAU,aAA+B;QAA/D,iBAAY,GAAZ,YAAY,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAkB;IAAG,CAAC;IAEvF,0CAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,0CAAQ,GAAR,UAAS,IAAY;QACnB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,+CAAa,GAAb,UAAc,WAAW;QACvB,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC;IACH,CAAC;IAED,yCAAO,GAAP;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACxC,UAAA,MAAM;YACJ,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACjE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,UAAA,KAAK;YACH,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACtE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4CAAU,GAAV,UAAW,MAAW;QACpB,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gDAAuB,CAAC,CAAC;QACjE,QAAQ,CAAC,iBAAiB,CAAC,aAAa,GAAG,MAAM,CAAC;QAClD,QAAQ,CAAC,MAAM,CAAC,IAAI,CAClB,UAAA,MAAM;YACJ,+CAA+C;QACjD,CAAC,EACD,UAAA,MAAM;YACJ,+CAA+C;QACjD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+CAAa,GAAb,UAAc,IAAY;QACxB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAtDU,uBAAuB;QAJnC,gBAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,yBAAyB;SACvC,CAAC;qEAKkC,uBAAQ,oBAAR,uBAAQ,sDAAyB,iCAAgB,oBAAhB,iCAAgB;OAJxE,uBAAuB,CAuDnC;IAAD,8BAAC;;CAAA,AAvDD,IAuDC;AAvDY,0DAAuB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiHealthService } from './health.service';\nimport { JhiHealthModalComponent } from './health-modal.component';\n\n@Component({\n  selector: 'jhi-health',\n  templateUrl: './health.component.html'\n})\nexport class JhiHealthCheckComponent implements OnInit {\n  healthData: any;\n  updatingHealth: boolean;\n\n  constructor(private modalService: NgbModal, private healthService: JhiHealthService) {}\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  baseName(name: string) {\n    return this.healthService.getBaseName(name);\n  }\n\n  getBadgeClass(statusState) {\n    if (statusState === 'UP') {\n      return 'badge-success';\n    } else {\n      return 'badge-danger';\n    }\n  }\n\n  refresh() {\n    this.updatingHealth = true;\n\n    this.healthService.checkHealth().subscribe(\n      health => {\n        this.healthData = this.healthService.transformHealthData(health);\n        this.updatingHealth = false;\n      },\n      error => {\n        if (error.status === 503) {\n          this.healthData = this.healthService.transformHealthData(error.error);\n          this.updatingHealth = false;\n        }\n      }\n    );\n  }\n\n  showHealth(health: any) {\n    const modalRef = this.modalService.open(JhiHealthModalComponent);\n    modalRef.componentInstance.currentHealth = health;\n    modalRef.result.then(\n      result => {\n        // Left blank intentionally, nothing to do here\n      },\n      reason => {\n        // Left blank intentionally, nothing to do here\n      }\n    );\n  }\n\n  subSystemName(name: string) {\n    return this.healthService.getSubSystemName(name);\n  }\n}\n"]}]}