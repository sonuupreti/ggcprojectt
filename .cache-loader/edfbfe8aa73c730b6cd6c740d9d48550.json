{"remainingRequest":"E:\\workspace_gspann\\itrack\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!E:\\workspace_gspann\\itrack\\node_modules\\ts-loader\\index.js??ref--10-3!E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js!E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js!E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","dependencies":[{"path":"E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","mtime":1522917699904},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http_1 = require(\"@angular/common/http\");\r\nrequire(\"rxjs/add/operator/do\");\r\nvar login_service_1 = require(\"app/core/login/login.service\");\r\nvar AuthExpiredInterceptor = /** @class */ (function () {\r\n    function AuthExpiredInterceptor(stateStorageService, injector) {\r\n        this.stateStorageService = stateStorageService;\r\n        this.injector = injector;\r\n    }\r\n    AuthExpiredInterceptor.prototype.intercept = function (request, next) {\r\n        var _this = this;\r\n        return next.handle(request).do(function (event) { }, function (err) {\r\n            if (err instanceof http_1.HttpErrorResponse) {\r\n                if (err.status === 401 && err.url && !err.url.includes('/api/account')) {\r\n                    var destination = _this.stateStorageService.getDestinationState();\r\n                    if (destination !== null) {\r\n                        var to = destination.destination;\r\n                        var toParams = destination.params;\r\n                        if (to.name === 'accessdenied') {\r\n                            _this.stateStorageService.storePreviousState(to.name, toParams);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.stateStorageService.storeUrl('/');\r\n                    }\r\n                    var loginService = _this.injector.get(login_service_1.LoginService);\r\n                    loginService.login();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return AuthExpiredInterceptor;\r\n}());\r\nexports.AuthExpiredInterceptor = AuthExpiredInterceptor;\r\n",{"version":3,"file":"E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","sourceRoot":"","sources":["E:\\workspace_gspann\\itrack\\node_modules\\angular-router-loader\\src\\index.js!E:\\workspace_gspann\\itrack\\node_modules\\tslint-loader\\index.js!E:\\workspace_gspann\\itrack\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts"],"names":[],"mappings":";;AACA,6CAA+G;AAE/G,gCAA8B;AAC9B,8DAA4D;AAG5D;IACE,gCAAoB,mBAAwC,EAAU,QAAkB;QAApE,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE5F,0CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAuBC;QAtBC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAC5B,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACP,EAAE,CAAC,CAAC,GAAG,YAAY,wBAAiB,CAAC,CAAC,CAAC;gBACrC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBACvE,IAAM,WAAW,GAAG,KAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;oBACnE,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;wBACzB,IAAM,EAAE,GAAG,WAAW,CAAC,WAAW,CAAC;wBACnC,IAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC;wBACpC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;4BAC/B,KAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;wBACjE,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBACzC,CAAC;oBAED,IAAM,YAAY,GAAiB,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,4BAAY,CAAC,CAAC;oBACnE,YAAY,CAAC,KAAK,EAAE,CAAC;gBACvB,CAAC;YACH,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,wDAAsB","sourcesContent":["import { Injector } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport { LoginService } from 'app/core/login/login.service';\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\n\nexport class AuthExpiredInterceptor implements HttpInterceptor {\n  constructor(private stateStorageService: StateStorageService, private injector: Injector) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).do(\n      (event: HttpEvent<any>) => {},\n      (err: any) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401 && err.url && !err.url.includes('/api/account')) {\n            const destination = this.stateStorageService.getDestinationState();\n            if (destination !== null) {\n              const to = destination.destination;\n              const toParams = destination.params;\n              if (to.name === 'accessdenied') {\n                this.stateStorageService.storePreviousState(to.name, toParams);\n              }\n            } else {\n              this.stateStorageService.storeUrl('/');\n            }\n\n            const loginService: LoginService = this.injector.get(LoginService);\n            loginService.login();\n          }\n        }\n      }\n    );\n  }\n}\n"]}]}